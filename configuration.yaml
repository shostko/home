
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

homeassistant:
  name: Home
  latitude: !secret lat
  longitude: !secret long
  elevation: 140
  unit_system: metric
  time_zone: Europe/Minsk
  external_url: !secret white_host
  internal_url: http://192.168.1.2:8123
  customize: !include customize.yaml
  packages: !include_dir_merge_named packages
  auth_providers:
    - type: homeassistant

http: 
  use_x_forwarded_for: true 
  trusted_proxies: 
    - 172.30.33.0/24

# Text to speech
#tts:
#  - platform: google_translate

logger:
  default: warning
  logs:
    homeassistant.components.mqtt: debug

recorder:
  !include include/recorder.yaml

lovelace:
  mode: yaml
  resources:
    - url: /local/vertical-stack-in-card.js?v=0.3.2
      type: js
  dashboards:
    lovelace-environment:
      mode: yaml
      filename: lovelace/environment.yaml
      title: Environment
      icon: mdi:chart-areaspline
      show_in_sidebar: true
      require_admin: false
    lovelace-devices:
      mode: yaml
      filename: lovelace/devices.yaml
      title: Devices
      icon: mdi:android-studio
      show_in_sidebar: true
      require_admin: true
    lovelace-prefs:
      mode: yaml
      filename: lovelace/prefs.yaml
      title: Preferences
      icon: mdi:account-cog-outline
      show_in_sidebar: true
      require_admin: false

automation: !include automations.yaml
script: !include scripts.yaml

mqtt:
  broker: core-mosquitto
  discovery: true
  discovery_prefix: homeassistant  
  username: !secret mqtt_user
  password: !secret mqtt_pwd

yeelight:
  devices:
    192.168.1.226:
      name: Kitchen Ceiling
      save_on_change: true
      nightlight_switch_type: light
      model: ceiling3
    192.168.1.182:
      name: Cabinet Desk Lamp
      save_on_change: true
      model: lamp1

light:
  - platform: xiaomi_miio
    host: 192.168.1.44
    token: !secret xiaomi_bulb1_token
    model: philips.light.bulb
  - platform: switch
    name: Kitchen 2 Relay L2
    entity_id: switch.kitchen_2_relay_l2
  - platform: switch
    name: Entrance Wall Switch Right
    entity_id: switch.entrance_wall_switch_right
  - platform: switch
    name: Entrance Wall Switch Left
    entity_id: switch.entrance_wall_switch_left
  - platform: switch
    name: Cabinet Wall Switch Left
    entity_id: switch.cabinet_wall_switch_left
  - platform: switch
    name: Cupboard Relay
    entity_id: switch.cupboard_relay
  - platform: switch
    name: Hall Wall Switch Left
    entity_id: switch.hall_wall_switch_left
  - platform: switch
    name: Hall Wall Switch Right
    entity_id: switch.hall_wall_switch_right
  - platform: switch
    name: Bedroom Wall Switch Left
    entity_id: switch.bedroom_wall_switch_left
  - platform: switch
    name: Bedroom Bed
    entity_id: switch.xiaomi_power_plug_1_switch
  - platform: switch
    name: Bedroom Mirror
    entity_id: switch.xiaomi_socket_2
  - platform: switch
    name: Entrance Door
    entity_id: switch.entance_door_light

adaptive_lighting:
  !include include/adaptive-lighting.yaml

binary_sensor:
  - platform: tod
    name: tod_night
    after: '00:00'
    before: '07:00'
  - platform: tod
    name: tod_day
    after: '07:00'
    before: '00:00'

telegram_bot:
  - platform: webhooks
    api_key: !secret telegram_home_key
    allowed_chat_ids:
      - !secret telegram_chat_sergey
      - !secret telegram_chat_alexa
      - !secret telegram_chat_log
    trusted_networks:
      - 172.30.33.2/32
      - 172.30.33.3/32
      - 149.154.160.0/20
      - 91.108.4.0/22
      - 149.154.160.0/20
      - 91.108.4.0/22

camera:
  - platform: ffmpeg
    name: Sonoff-Camera-1
    input: -rtsp_transport tcp -i rtsp://rtsp:sonoff@192.168.1.93:554/av_stream/ch0

sensor:
  - platform: template
    sensors:
      xiaomi_thp_1_pressure_mmhg:
        unique_id: xiaomi_thp_1_pressure_mmhg
        friendly_name: "Xiaomi THP #1 Pressure mmHg"
        unit_of_measurement: 'mmHg'
        value_template: "{{ (states('sensor.xiaomi_thp_1_pressure') | int * 0.75006156) | int }}"
        availability_template: "{{ states('sensor.xiaomi_thp_1_pressure') | int > 0 }}"
        icon_template: >-
          {% set state = states('sensor.xiaomi_thp_1_pressure_mmhg') | int %}
          {% if state > 820 %}
            mdi:gauge-full
          {% elif state > 760 %}
            mdi:gauge
          {% elif state > 700 %}
            mdi:gauge-low
          {% else %}
            mdi:gauge-empty
          {% endif %}
      xiaomi_thp_2_pressure_mmhg:
        unique_id: xiaomi_thp_2_pressure_mmhg
        friendly_name: "Xiaomi THP #2 Pressure mmHg"
        unit_of_measurement: 'mmHg'
        value_template: "{{ (states('sensor.xiaomi_thp_2_pressure') | int * 0.75006156) | int }}"
        availability_template: "{{ states('sensor.xiaomi_thp_2_pressure') | int > 0 }}"
        icon_template: >-
          {% set state = states('sensor.xiaomi_thp_2_pressure_mmhg') | int %}
          {% if state > 820 %}
            mdi:gauge-full
          {% elif state > 760 %}
            mdi:gauge
          {% elif state > 700 %}
            mdi:gauge-low
          {% else %}
            mdi:gauge-empty
          {% endif %}
      hall_average_temperature:
        unique_id: hall_average_temperature
        friendly_name: "Hall Average Temperature"
        unit_of_measurement: '°C'
        value_template: >-
          {% set arr =
            ([
              states('sensor.mijia_d107_temperature'),
              states('sensor.humidifier_1_temp'),
              states('sensor.xiaomi_thp_1_temperature')
            ]) | map('float', -1000) | select('gt', -1000) | list
          %}
          {% set count = arr | count %}
          {% if count == 0 %}
            'error'
          {% else %}
            {% set sum = arr | sum %}
            {{ (sum / count) | round(1) }}
          {% endif %}
        availability_template: >-
          {{
            not is_state('sensor.mijia_d107_temperature', 'unavailable')
          or
            not is_state('sensor.humidifier_1_temp', 'unavailable')
          or
            not is_state('sensor.xiaomi_thp_1_temperature', 'unavailable')
          }}
      hall_average_humidity:
        unique_id: hall_average_humidity
        friendly_name: "Hall Average Humidity"
        unit_of_measurement: '%'
        value_template: >-
          {% set arr =
            ([
              states('sensor.mijia_d107_humidity'),
              states('sensor.humidifier_1_hum'),
              states('sensor.xiaomi_thp_1_humidity')
            ]) | map('float', -1000) | select('gt', -1000) | list
          %}
          {% set count = arr | count %}
          {% if count == 0 %}
            'error'
          {% else %}
            {% set sum = arr | sum %}
            {{ (sum / count) | round(1) }}
          {% endif %}
        availability_template: >-
          {{
            not is_state('sensor.mijia_d107_humidity', 'unavailable')
          or
            not is_state('sensor.humidifier_1_hum', 'unavailable')
          or
            not is_state('sensor.xiaomi_thp_1_humidity', 'unavailable')
          }}
      bedroom_average_temperature:
        unique_id: bedroom_average_temperature
        friendly_name: "Bedroom Average Temperature"
        unit_of_measurement: '°C'
        value_template: >-
          {% set arr =
            ([
              states('sensor.bedroom_temp_and_hum_temperature'),
              states('sensor.mijia_a4db_temperature'),
              states('sensor.humidifier_2_temp')
            ]) | map('float', -1000) | select('gt', -1000) | list
          %}
          {% set count = arr | count %}
          {% if count == 0 %}
            'error'
          {% else %}
            {% set sum = arr | sum %}
            {{ (sum / count) | round(1) }}
          {% endif %}
        availability_template: >-
          {{
            not is_state('sensor.bedroom_temp_and_hum_temperature', 'unavailable')
          or
            not is_state('sensor.mijia_a4db_temperature', 'unavailable')
          or
            not is_state('sensor.humidifier_2_temp', 'unavailable')
          }}
      bedroom_average_humidity:
        unique_id: bedroom_average_humidity
        friendly_name: "Bedroom Average Humidity"
        unit_of_measurement: '%'
        value_template: >-
          {% set arr =
            ([
              states('sensor.bedroom_temp_and_hum_humidity'),
              states('sensor.mijia_a4db_humidity'),
              states('sensor.humidifier_2_hum')
            ]) | map('float', -1000) | select('gt', -1000) | list
          %}
          {% set count = arr | count %}
          {% if count == 0 %}
            'error'
          {% else %}
            {% set sum = arr | sum %}
            {{ (sum / count) | round(1) }}
          {% endif %}
        availability_template: >-
          {{
            not is_state('sensor.bedroom_temp_and_hum_humidity', 'unavailable')
          or
            not is_state('sensor.mijia_a4db_humidity', 'unavailable')
          or
            not is_state('sensor.humidifier_2_hum', 'unavailable')
          }}
      kitchen_average_temperature:
        unique_id: kitchen_average_temperature
        friendly_name: "Kitchen Average Temperature"
        unit_of_measurement: '°C'
        value_template: >-
          {% set arr =
            ([
              states('sensor.mijia_cb15_temperature'),
              states('sensor.mijia_a810_temperature')
            ]) | map('float', -1000) | select('gt', -1000) | list
          %}
          {% set count = arr | count %}
          {% if count == 0 %}
            'error'
          {% else %}
            {% set sum = arr | sum %}
            {{ (sum / count) | round(1) }}
          {% endif %}
        availability_template: >-
          {{
            not is_state('sensor.mijia_cb15_temperature', 'unavailable')
          or
            not is_state('sensor.mijia_a810_temperature', 'unavailable')
          }}
      kitchen_average_humidity:
        unique_id: kitchen_average_humidity
        friendly_name: "Kitchen Average Humidity"
        unit_of_measurement: '%'
        value_template: >-
          {% set arr =
            ([
              states('sensor.mijia_cb15_humidity'),
              states('sensor.mijia_a810_humidity')
            ]) | map('float', -1000) | select('gt', -1000) | list
          %}
          {% set count = arr | count %}
          {% if count == 0 %}
            'error'
          {% else %}
            {% set sum = arr | sum %}
            {{ (sum / count) | round(1) }}
          {% endif %}
        availability_template: >-
          {{
            not is_state('sensor.mijia_cb15_humidity', 'unavailable')
          or
            not is_state('sensor.mijia_a810_humidity', 'unavailable')
          }}
  - platform: filter
    name: "Hall Temperature"
    entity_id: sensor.hall_average_temperature
    filters:
      - filter: outlier
        window_size: 5
        radius: 10.0
      - filter: lowpass
        time_constant: 5
        precision: 1
      - filter: time_simple_moving_average
        window_size: "00:03"
  - platform: filter
    name: "Hall Humidity"
    entity_id: sensor.hall_average_humidity
    filters:
      - filter: outlier
        window_size: 5
        radius: 10.0
      - filter: lowpass
        time_constant: 5
        precision: 1
      - filter: time_simple_moving_average
        window_size: "00:03"
  - platform: filter
    name: "Bedroom Temperature"
    entity_id: sensor.bedroom_average_temperature
    filters:
      - filter: outlier
        window_size: 5
        radius: 10.0
      - filter: lowpass
        time_constant: 5
        precision: 1
      - filter: time_simple_moving_average
        window_size: "00:03"
  - platform: filter
    name: "Bedroom Humidity"
    entity_id: sensor.bedroom_average_humidity
    filters:
      - filter: outlier
        window_size: 5
        radius: 10.0
      - filter: lowpass
        time_constant: 5
        precision: 1
      - filter: time_simple_moving_average
        window_size: "00:03"
  - platform: filter
    name: "Kitchen Temperature"
    entity_id: sensor.kitchen_average_temperature
    filters:
      - filter: outlier
        window_size: 5
        radius: 10.0
      - filter: lowpass
        time_constant: 5
        precision: 1
      - filter: time_simple_moving_average
        window_size: "00:03"
  - platform: filter
    name: "Kitchen Humidity"
    entity_id: sensor.kitchen_average_humidity
    filters:
      - filter: outlier
        window_size: 5
        radius: 10.0
      - filter: lowpass
        time_constant: 5
        precision: 1
      - filter: time_simple_moving_average
        window_size: "00:03"

template: !include_dir_merge_list include/templates

yandex_station:
  username: !secret ya_username
  password: !secret ya_password
  intents:
    !include include/alice-intents.yaml
yandex_smart_home:
  filter:
    include_domains:
    include_entities:
      !include include/alice-list.yaml
  entity_config:
    !include include/alice-details.yaml

notify:
  - name: sergey
    platform: telegram
    chat_id: !secret telegram_chat_sergey
  - name: alexa
    platform: telegram
    chat_id: !secret telegram_chat_alexa
  - name: log
    platform: telegram
    chat_id: !secret telegram_chat_log
  - name: family
    platform: group
    services:
      - service: sergey
      - service: alexa
