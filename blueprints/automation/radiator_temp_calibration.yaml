blueprint:
  name: Moes Radiator Temperature Calibration
  description: Changes calibration on Moes Radiator actuator to have it's value equal to HA sensor
  domain: automation

  input:
    source_sensor:
      name: Temperature Sensor
      selector:
        entity:
          domain: sensor
          device_class: temperature
    target_climate:
      name: Radiator actuator
      selector:
        entity:
          domain: climate
    mqtt_name:
      name: MQTT topic part
      description: Device name used in Zigbee2MQTT
      selector:
        text:
    log_area:
      name: Name of are to log
      description: Where Radiator is placed
      selector:
        text:

mode: restart

trigger:
  # Запущен HA
  - platform: homeassistant
    event: start
  # Перезагружены автоматизации
  - platform: event
    event_type: automation_reloaded
  # Сенсор температуры в комнате стал доступен
  - platform: state
    entity_id: !input source_sensor
    from: 'unavailable'
  # Радиатор стал доступен
  - platform: state
    entity_id: !input target_climate
    from: 'unavailable'
  # Изменение температуры на радиаторе
  - platform: state
    entity_id: !input source_sensor
    for: "00:01:00"
  # Изменение температуры в комнате
  - platform: state
    entity_id: !input target_climate
    attribute: local_temperature
    for: "00:01:00"

variables:
  source_sensor: !input source_sensor
  target_climate: !input target_climate
  mqtt_name: !input mqtt_name
  log_area: !input log_area
  source_value: "{{ states(source_sensor) | float(-1000) | round(1, 'half') }}"
  target_value: "{{ state_attr(target_climate, 'local_temperature') | float(-1000) }}"

condition:
  - "{{ source_value > -1000 }}"
  - "{{ target_value > -1000 }}"
  - "{{ source_value != target_value }}"
  - "{{ not is_state(target_climate, 'unavailable') }}"

action:
  - variables: 
      current_calibration: "{{ state_attr(target_climate, 'local_temperature_calibration') | float }}"
      target_calibration: "{{ current_calibration + source_value - target_value }}"
  - service: mqtt.publish
    data_template:
      topic: zigbee2mqtt/{{ mqtt_name }}/set/local_temperature_calibration
      payload: "{{ target_calibration }}"
  # - service: notify.log
  #   data:
  #     title: "*Корректировка температуры {{ log_area }}*"
  #     message: |-
  #       Тригер: {{ trigger.description | replace("_","\_") }}
  #       Сенсор: _{{ source_value }}_
  #       Радиатор: _{{ target_value }}_
  #       Текущая калибровка: _{{ current_calibration }}_
  #       Новая калибровка: _{{ target_calibration }}_