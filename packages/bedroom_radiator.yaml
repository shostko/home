bedroom_radiator:

  sensor:
    - platform: template
      sensors:
        radiator_2_temp:
          unique_id: radiator_2_current_temperature
          friendly_name: "Radiator Actuator #2 Current Temperature"
          unit_of_measurement: 'Â°C'
          value_template: "{{ state_attr('climate.moes_radiator_actuator_2_climate', 'current_temperature') }}"
          availability_template: "{{ not is_state('climate.moes_radiator_actuator_2_climate', 'unavailable') }}"

  input_number:

    bedroom_target_temperature:
      name: Bedroom Target Temperature
      unit_of_measurement: 'Â°C'
      icon: mdi:thermometer-lines
      mode: box
      min: 18
      max: 25
      step: 0.5

  automation:

    - alias: Bedroom Radiator Temp Change
      trigger:
        - platform: state
          entity_id: input_number.bedroom_target_temperature
        - platform: state
          entity_id: sensor.bedroom_temperature
        - platform: state
          entity_id: sensor.radiator_2_temp
      condition: 
        - "{{ states('input_number.bedroom_target_temperature') | float(-1000) > -1000 }}"
        - "{{ states('sensor.bedroom_temperature') | float(-1000) > -1000 }}"
        - "{{ states('sensor.radiator_2_temp') | float(-1000) > -1000 }}"
        - "{{ not is_state('climate.moes_radiator_actuator_2_climate', 'unavailable') }}"
      action:
        - service: climate.set_temperature
          data_template:
            entity_id: climate.moes_radiator_actuator_2_climate
            temperature: >-
              {% set target = states('input_number.bedroom_target_temperature') | float %}
              {% set sensor = states('sensor.bedroom_temperature') | float %}
              {% set radiator = states('sensor.radiator_2_temp') | float %}
              {{ (radiator + target - sensor) | round(1) }}