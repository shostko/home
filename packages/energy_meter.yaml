energy_meter:

  mqtt:
    sensor:      
      # Время включения
      - name: 'Energy Meter: Since'
        state_topic: 'energy-meter/tele/STATE'
        value_template: '{{ (as_timestamp(value_json.Time) - value_json.UptimeSec) | timestamp_custom("%d.%m.%Y %H:%M",true) }}'
        availability_topic: "energy-meter/tele/LWT"
        payload_available: "Online"
        payload_not_available: "Offline"
      # Энергия (с датчика)
      - name: 'Energy Meter: Sum'
        unit_of_measurement: 'kWh'
        state_topic: 'energy-meter/tele/SENSOR'
        value_template: '{{ value_json.ENERGY.Total }}'
        availability_topic: "energy-meter/tele/LWT"
        payload_available: "Online"
        payload_not_available: "Offline"
      # Энергия (за сегодня)
      - name: 'Energy Meter: Today'
        unit_of_measurement: 'kWh'
        state_topic: 'energy-meter/tele/SENSOR'
        value_template: '{{ value_json.ENERGY.Today }}'
        availability_topic: "energy-meter/tele/LWT"
        payload_available: "Online"
        payload_not_available: "Offline"
      # Напряжение
      - name: 'Energy Meter: Voltage'
        unit_of_measurement: 'V'
        state_topic: 'energy-meter/tele/SENSOR'
        value_template: '{{ value_json.ENERGY.Voltage }}'
        availability_topic: "energy-meter/tele/LWT"
        payload_available: "Online"
        payload_not_available: "Offline"
      # Сила тока
      - name: 'Energy Meter: Current'
        unit_of_measurement: 'A'
        state_topic: 'energy-meter/tele/SENSOR'
        value_template: '{{ value_json.ENERGY.Current }}'
        availability_topic: "energy-meter/tele/LWT"
        payload_available: "Online"
        payload_not_available: "Offline"
      # Мощность
      - name: 'Energy Meter: Power'
        unit_of_measurement: 'W'
        state_topic: 'energy-meter/tele/SENSOR'
        value_template: '{{ value_json.ENERGY.Power }}'
        availability_topic: "energy-meter/tele/LWT"
        payload_available: "Online"
        payload_not_available: "Offline"
      # Мощность Активная
      - name: 'Energy Meter: Power Apparent'
        unit_of_measurement: 'VA'
        state_topic: 'energy-meter/tele/SENSOR'
        value_template: '{{ value_json.ENERGY.ApparentPower }}'
        availability_topic: "energy-meter/tele/LWT"
        payload_available: "Online"
        payload_not_available: "Offline"
      # Мощность Реактивная
      - name: 'Energy Meter: Power Reactive'
        unit_of_measurement: 'VAr'
        state_topic: 'energy-meter/tele/SENSOR'
        value_template: '{{ value_json.ENERGY.ReactivePower }}'
        availability_topic: "energy-meter/tele/LWT"
        payload_available: "Online"
        payload_not_available: "Offline"
      # Фактор мощности
      - name: 'Energy Meter: Factor'
        unit_of_measurement: 'Cos φ'
        state_topic: 'energy-meter/tele/SENSOR'
        value_template: '{{ value_json.ENERGY.Factor }}'
        availability_topic: "energy-meter/tele/LWT"
        payload_available: "Online"
        payload_not_available: "Offline"

  input_number:
    energy_meter_total_correction:
      name: 'Energy Meter: Correction'
      min: 0
      max: 1000000
      step: 1
      mode: box

  template:
    - sensor:
        - name: 'Energy Meter: Value Midnight'
          unique_id: energy_meter_value_midnight
          state: "{{ states('sensor.energy_meter_total') }}"
          unit_of_measurement: "kWh"
          device_class: energy
      trigger: 
        - platform: event
          event_type: Energy_Meter_Midnight
    - sensor:
        - name: 'Energy Meter: Value Month'
          unique_id: energy_meter_value_month
          state: "{{ states('sensor.energy_meter_total') }}"
          unit_of_measurement: "kWh"
          device_class: energy
      trigger: 
        - platform: event
          event_type: Energy_Meter_Month
    - sensor:
        - name: 'Energy Meter: Value Last Month'
          unique_id: energy_meter_value_last_month
          state: "{{ states('sensor.energy_meter_value_month') }}"
          unit_of_measurement: "kWh"
          device_class: energy
      trigger: 
        - platform: event
          event_type: Energy_Meter_Last_Month
    - sensor:
        - name: 'Energy Meter: Final'
          unique_id: energy_meter_final
          unit_of_measurement: "kWh"
          device_class: energy
          state: >-
            {% set total = states('sensor.energy_meter_total') | int %}
            {% set correction = states('input_number.energy_meter_total_correction') | int %}
            {{ total + correction }}
    - sensor:
        - name: 'Energy Meter: Sum This Month'
          unit_of_measurement: "kWh"
          device_class: energy          
          state: >
            {% set total = states('sensor.energy_meter_total') | float %}
            {% set month = states('sensor.energy_meter_value_month') | float %}
            {{ (total - month) | round(4, default=0) }}
    - sensor:
        - name: 'Energy Meter: Sum Last Month'
          unit_of_measurement: "kWh"
          device_class: energy
          state: >
            {% set thisMonth = states('sensor.energy_meter_value_month') | float %}
            {% set lastMonth = states('sensor.energy_meter_value_last_month') | float %}
            {{ (thisMonth - lastMonth) | round(4, default=0) }}

  sensor: 
    - platform: integration
      source: sensor.energy_meter_power
      name: 'Energy Meter: Total'
      unit_prefix: k
      round: 4

  automation:
    
    - alias: "Energy Meter: Record values"
      id: "Energy Meter: Record values"
      trigger:
        - platform: time
          at: "00:00:00"
      action:
        - service: notify.sergey
          data:
            message: "Начало нового дня!"
        - event: Energy_Meter_Midnight
        - choose:
            # Начало месяца
            - conditions: "{{ (now().strftime('%d') | int) == 1 }}"
              sequence:
                - service: notify.sergey
                  data:
                    message: "Начало нового месяца!"
                - event: Energy_Meter_Last_Month
                - delay: 3
                - event: Energy_Meter_Month
