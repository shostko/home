humidifier:

  automation:
    
    - alias: Humidifier 1 no water
      trigger:
        # Воды почти нету
        - platform: numeric_state
          entity_id: sensor.humidifier_1_water
          below: 4
          for: "00:00:10"
      condition:
        - condition: template
          value_template: >
            {{
              is_state(trigger.from_state.state, 'on')
            and
              trigger.from_state.state | int > trigger.to_state.state | int
            }}
      action:
        # Выключить увлажнитель
        - service: fan.turn_off
          entity_id: fan.humidifier_1
        # Сообщение в LOG
        - service: notify.log
          data_template:
            message: "Увлажнитель в зале: no {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}"
    
    - alias: Humidifier 1 water low
      trigger:
        # Уровень воды ниже порога (но вода есть)
        - platform: numeric_state
          entity_id: sensor.humidifier_1_water
          above: 3
          below: 30
          for: "00:00:10"
      condition:
        - condition: template
          value_template: >
            {{ not is_state(trigger.from_state.state, 'unavailable') }}
      action:
        # Установить режим low
        - service: fan.set_speed
          entity_id: fan.humidifier_1
          data:
            speed: silent
        # Сообщение в LOG
        - service: notify.log
          data_template:
            message: "Увлажнитель в зале: low {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}"
    
    - alias: Humidifier 1 water enough
      trigger:
        # Уровень воды выше порога
        - platform: numeric_state
          entity_id: sensor.humidifier_1_water
          above: 30
          for: "00:00:10"
      condition:
        - condition: template
          value_template: >
            {{
              not is_state(trigger.from_state.state, 'unavailable')
            and
              trigger.from_state.state | int < trigger.to_state.state | int
            }}
      action:
        # Установить режим high
        - service: fan.set_speed
          entity_id: fan.humidifier_1
          data:
            speed: high
        # Сообщение в LOG
        - service: notify.log
          data_template:
            message: "Увлажнитель в зале: enough {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}"

    - alias: Humidifier 2 no water
      trigger:
        # Воды почти нету
        - platform: numeric_state
          entity_id: sensor.humidifier_2_water
          below: 4
          for: "00:00:10"
      condition:
        - condition: template
          value_template: >
            {{
              is_state(trigger.from_state.state, 'on')
            and
              trigger.from_state.state | int > trigger.to_state.state | int
            }}
      action:
        # Выключить увлажнитель
        - service: fan.turn_off
          entity_id: fan.humidifier_2
        # Сообщение в LOG
        - service: notify.log
          data_template:
            message: "Увлажнитель в спальне: no {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}"
    
    - alias: Humidifier 2 water low
      trigger:
        # Уровень воды ниже порога (но вода есть)
        - platform: numeric_state
          entity_id: sensor.humidifier_2_water
          above: 3
          below: 30
          for: "00:00:10"
      condition:
        - condition: template
          value_template: >
            {{ not is_state(trigger.from_state.state, 'unavailable') }}
      action:
        # Установить режим low
        - service: fan.set_speed
          entity_id: fan.humidifier_2
          data:
            speed: silent
        # Сообщение в LOG
        - service: notify.log
          data_template:
            message: "Увлажнитель в спальне: low {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}"
    
    - alias: Humidifier 2 water enough
      trigger:
        # Уровень воды выше порога
        - platform: numeric_state
          entity_id: sensor.humidifier_2_water
          above: 30
          for: "00:00:10"
      condition:
        - condition: template
          value_template: >
            {{
              not is_state(trigger.from_state.state, 'unavailable')
            and
              trigger.from_state.state | int < trigger.to_state.state | int
            }}
      action:
        # Установить режим high
        - service: fan.set_speed
          entity_id: fan.humidifier_2
          data:
            speed: high
        # Сообщение в LOG
        - service: notify.log
          data_template:
            message: "Увлажнитель в спальне: enough {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}"
