humidifier:

  fan:
    - platform: xiaomi_miio
      host: 192.168.1.104
      model: zhimi.humidifier.ca1
      name: "Humidifier #1"
      token: !secret xiaomi_humidifier1_token
    - platform: xiaomi_miio
      host: 192.168.1.203
      model: zhimi.humidifier.ca1
      name: "Humidifier #2"
      token: !secret xiaomi_humidifier2_token

  sensor:
    - platform: template
      sensors:
        humidifier_1_temp:
          unique_id: humidifier_1_temp
          friendly_name: "Humidifier #1 Temperature"
          unit_of_measurement: '°C'
          value_template: "{{ state_attr('fan.humidifier_1', 'temperature') }}"
          availability_template: >-
            {{ 
              is_state('fan.humidifier_1', 'on') 
            and
              (
                state_attr('fan.humidifier_1', 'motor_speed') > 0
              or
                state_attr('fan.humidifier_1', 'depth') > 125
              )
            }}
        humidifier_1_hum:
          unique_id: humidifier_1_hum
          friendly_name: "Humidifier #1 Humidity"
          unit_of_measurement: '%'
          value_template: "{{ state_attr('fan.humidifier_1', 'humidity') }}"
          availability_template: >-
            {{ 
              is_state('fan.humidifier_1', 'on') 
            and
              (
                state_attr('fan.humidifier_1', 'motor_speed') > 0
              or
                state_attr('fan.humidifier_1', 'depth') > 125
              )
            }}
        humidifier_1_water:
          unique_id: humidifier_1_water
          friendly_name: "Humidifier #1 Water Level"
          unit_of_measurement: '%'
          value_template: >
            {% set depth = state_attr('fan.humidifier_1', 'depth') | int %}
            {%- if depth > 125 -%}
              detached
            {%- elif depth < 11 -%}
              0
            {%- else -%}
              {{ ((depth - 10) / 115 * 100) | int }}
            {% endif %}
          availability_template: "{{ not is_state('fan.humidifier_1', 'unavailable') }}"
          icon_template: >-
            {% if states('sensor.humidifier_1_water') | int > 30 %}
              mdi:waves
            {% else %}
              mdi:wave
            {% endif %}
        humidifier_2_temp:
          unique_id: humidifier_2_temp
          friendly_name: "Humidifier #2 Temperature"
          unit_of_measurement: '°C'
          value_template: "{{ state_attr('fan.humidifier_2', 'temperature') }}"
          availability_template: >-
            {{ 
              is_state('fan.humidifier_2', 'on') 
            and
              (
                state_attr('fan.humidifier_2', 'motor_speed') > 0
              or
                state_attr('fan.humidifier_2', 'depth') > 125
              )
            }}
        humidifier_2_hum:
          unique_id: humidifier_2_hum
          friendly_name: "Humidifier #2 Humidity"
          unit_of_measurement: '%'
          value_template: "{{ state_attr('fan.humidifier_2', 'humidity') }}"
          availability_template: >-
            {{ 
              is_state('fan.humidifier_2', 'on') 
            and
              (
                state_attr('fan.humidifier_2', 'motor_speed') > 0
              or
                state_attr('fan.humidifier_2', 'depth') > 125
              )
            }}
        humidifier_2_water:
          unique_id: humidifier_2_water
          friendly_name: "Humidifier #2 Water Level"
          unit_of_measurement: '%'
          value_template: >
            {% set depth = state_attr('fan.humidifier_2', 'depth') | int %}
            {%- if depth > 125 -%}
              detached
            {%- elif depth < 11 -%}
              0
            {%- else -%}
              {{ ((depth - 10) / 115 * 100) | int }}
            {% endif %}
          availability_template: "{{ not is_state('fan.humidifier_2', 'unavailable') }}"
          icon_template: >-
            {% if states('sensor.humidifier_2_water') | int > 30 %}
              mdi:waves
            {% else %}
              mdi:wave
            {% endif %}
    
  automation:
    
    - alias: Humidifier 1 is off
      trigger:
        # Увлажнитель выключен
        - platform: state
          entity_id: fan.humidifier_1
          to: 'off'
          for: "00:01:00"
      condition:
        - condition: numeric_state
          entity_id: sensor.humidifier_1_water
          above: 3
      action:
        # Сообщение
        - service: notify.sergey
          data_template:
            message: "Увлажнитель в зале выключен, хотя уровень воды {{ states('sensor.humidifier_1_water') }}%"
    
    - alias: Humidifier 1 no water
      trigger:
        # Воды почти нету
        - platform: numeric_state
          entity_id: sensor.humidifier_1_water
          below: 4
          for: "00:00:10"
      condition:
        - condition: state
          entity_id: fan.humidifier_1
          state: 'on'
      action:
        # Выключить увлажнитель
        - service: fan.turn_off
          entity_id: fan.humidifier_1
        # Сообщение в LOG
        - service: notify.sergey
          data_template:
            message: "Увлажнитель в зале выключен: уровень воды {{ trigger.to_state.state }}%"
    
    - alias: Humidifier 1 speed changing
      trigger:
        # Влажность > 50%
        - platform: numeric_state
          entity_id: sensor.hall_humidity
          above: 50
          for: "00:02:00"
        # Влажность от 40% до 50% 
        - platform: numeric_state
          entity_id: sensor.hall_humidity
          above: 40
          below: 50
          for: "00:02:00"
        # Влажность < 40%
        - platform: numeric_state
          entity_id: sensor.hall_humidity
          below: 40
          for: "00:02:00"
        # Уровень воды > 90%
        - platform: numeric_state
          entity_id: sensor.humidifier_1_water
          above: 90
          for: "00:01:00"
        # Увлажнитель включился
        - platform: state
          entity_id: fan.humidifier_1
          to: 'on'
      condition:
        # Влажность известна
        - "{{ states('sensor.hall_humidity') | float(-1000) > -1000 }}"
        - condition: or
          conditions:
            # Увлажнитель включен
            - condition: state
              entity_id: fan.humidifier_1
              state: "on"
            # Уровень воды > 90%
            - condition: numeric_state
              entity_id: sensor.humidifier_1_water
              above: 90
      action:
        # Рассчитываем нужный режим
        - variables: 
            target: >-
              {%- set hum = states('sensor.hall_humidity') | float %}
              {%- if hum > 50 %}
                Silent
              {%- elif hum >= 40 %}
                Medium
              {%- else %}
                High
              {%- endif %}
        # Установить режим
        - service: fan.set_speed
          entity_id: fan.humidifier_1
          data:
            speed: "{{ target }}"
        # Сообщение в LOG
        - service: notify.log
          data_template:
            message: "Увлажнитель в зале переведён в режим {{ target }}"

    - alias: Humidifier 2 is off
      trigger:
        # Увлажнитель выключен
        - platform: state
          entity_id: fan.humidifier_2
          to: 'off'
          for: "00:01:00"
      condition:
        - condition: numeric_state
          entity_id: sensor.humidifier_2_water
          above: 3
      action:
        # Сообщение
        - service: notify.sergey
          data_template:
            message: "Увлажнитель в спальне выключен, хотя уровень воды {{ states('sensor.humidifier_1_water') }}%"

    - alias: Humidifier 2 no water
      trigger:
        # Воды почти нету
        - platform: numeric_state
          entity_id: sensor.humidifier_2_water
          below: 4
          for: "00:00:10"
      condition:
        - condition: state
          entity_id: fan.humidifier_2
          state: 'on'
      action:
        # Выключить увлажнитель
        - service: fan.turn_off
          entity_id: fan.humidifier_2
        # Сообщение в LOG
        - service: notify.sergey
          data_template:
            message: "Увлажнитель в спальне выключен: уровень воды {{ trigger.to_state.state }}%"
    
    - alias: Humidifier 2 speed changing
      trigger:
        # Влажность > 50%
        - platform: numeric_state
          entity_id: sensor.bedroom_humidity
          above: 50
          for: "00:02:00"
        # Влажность от 40% до 50% 
        - platform: numeric_state
          entity_id: sensor.bedroom_humidity
          above: 40
          below: 50
          for: "00:02:00"
        # Влажность < 40%
        - platform: numeric_state
          entity_id: sensor.bedroom_humidity
          below: 40
          for: "00:02:00"
        # Уровень воды > 90%
        - platform: numeric_state
          entity_id: sensor.humidifier_2_water
          above: 90
          for: "00:01:00"
        # Увлажнитель включился
        - platform: state
          entity_id: fan.humidifier_2
          to: 'on'
      condition:
        # Влажность известна
        - "{{ states('sensor.bedroom_humidity') | float(-1000) > -1000 }}"
        - condition: or
          conditions:
            # Увлажнитель включен
            - condition: state
              entity_id: fan.humidifier_2
              state: "on"
            # Уровень воды > 90%
            - condition: numeric_state
              entity_id: sensor.humidifier_2_water
              above: 90
      action:
        # Рассчитываем нужный режим
        - variables: 
            target: >-
              {%- set hum = states('sensor.bedroom_humidity') | float %}
              {%- if hum > 50 %}
                Silent
              {%- elif hum >= 40 %}
                Medium
              {%- else %}
                High
              {%- endif %}
        # Установить режим
        - service: fan.set_speed
          entity_id: fan.humidifier_2
          data:
            speed: "{{ target }}"
        # Сообщение в LOG
        - service: notify.log
          data_template:
            message: "Увлажнитель в спальне переведён в режим {{ target }}"
