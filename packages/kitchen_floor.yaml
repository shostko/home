kitchen_floor:
    
  input_datetime:
    kitchen_floor_heat_morning:
      name: 'Kitchen Floor HEAT: morning'
      has_time: true
    kitchen_floor_heat_day:
      name: 'Kitchen Floor HEAT: day'
      has_time: true
    kitchen_floor_heat_evening:
      name: 'Kitchen Floor HEAT: evening'
      has_time: true
    kitchen_floor_night_start:
      name: 'Kitchen Floor NIGHT: start'
      has_time: true
    kitchen_floor_night_end:
      name: 'Kitchen Floor NIGHT: end'
      has_time: true

  input_number:
    kitchen_floor_temp_heat:
      name: 'Kitchen Floor Temperature: HEAT'
      min: 22
      max: 30
      step: 0.5
    kitchen_floor_temp_night:
      name: 'Kitchen Floor Temperature: NIGHT'
      min: 22
      max: 30
      step: 0.5
    kitchen_floor_temp_away:
      name: 'Kitchen Floor Temperature: AWAY'
      min: 22
      max: 30
      step: 0.5
    kitchen_floor_temp_regular:
      name: 'Kitchen Floor Temperature: REGULAR'
      min: 22
      max: 30
      step: 0.5

  template:
    - binary_sensor:
      - name: Kitchen Floor Heat
        unique_id: kitchen_floor_heat
        state: >-
          {% set now = now() %}
          {% set delta = timedelta(hours = 1, minutes = 30)  %}
          {% set morning = today_at(states('input_datetime.kitchen_floor_heat_morning')) %}
          {% set day = today_at(states('input_datetime.kitchen_floor_heat_day')) %}
          {% set evening = today_at(states('input_datetime.kitchen_floor_heat_evening')) %}
          {{ 
            morning <= now <= morning + delta 
            or
            day <= now <= day + delta 
            or
            evening <= now <= evening + delta 
          }}
      - name: Kitchen Floor Night
        unique_id: kitchen_floor_night
        state: >-
          {% set now = now() %}
          {% set start = today_at(states('input_datetime.kitchen_floor_night_start')) %}
          {% set end = today_at(states('input_datetime.kitchen_floor_night_end')) %}
          {{ start <= now or now <= end }}

  mqtt:
    binary_sensor:
      - name: "Kitchen Floor Relay"
        unique_id: kitchen_floor_relay
        state_topic: "climate/lytko/10763110/state"
        value_template: "{{ value_json.relay }}"
        payload_on: "1"
        payload_off: "0"
        availability_topic: "climate/lytko/10763110/available"
        payload_available: "online"
        payload_not_available: "offline"
        device_class: "heat"
    sensor:
      - name: "Kitchen Floor Temp"
        unique_id: kitchen_floor_temp
        state_topic: "climate/lytko/10763110/state"
        value_template: "{{ value_json.temp }}"
        availability_topic: "climate/lytko/10763110/available"
        payload_available: "online"
        payload_not_available: "offline"
        device_class: "temperature"
        unit_of_measurement: "°C"

  sensor:
    - platform: template
      sensors:
        kitchen_floor_relay_fake:
          unique_id: kitchen_floor_relay_fake
          friendly_name: "Kitchen Floor Relay"
          unit_of_measurement: '°C'
          value_template: >-
            {% if is_state('binary_sensor.kitchen_floor_relay', 'on') %}
              30
            {% else %}
              22
            {% endif %}
          availability_template: "{{ not is_state('binary_sensor.kitchen_floor_relay', 'unavailable') }}"
        kitchen_floor_target_temp:
          unique_id: kitchen_floor_target_temp
          friendly_name: "Kitchen Floor Target"
          unit_of_measurement: '°C'
          value_template: "{{ state_attr('climate.lytko_kitchen', 'temperature') }}"
          availability_template: "{{ not is_state('climate.lytko_kitchen', 'unavailable') }}"
    - name: "Kitchen Floor ON Time"
      platform: history_stats
      entity_id: binary_sensor.kitchen_floor_relay
      state: 'on'
      type: time
      start: "{{ now().replace(hour=0, minute=0, second=0) }}"
      end: "{{ now() }}"

  rest_command:
    restart_lytko:
      url: "http://192.168.1.170/reset"

  automation:
    
    - alias: "Kitchen floor: Restart"
      id: "Kitchen floor: Restart"
      trigger:
        # Термостат недоступен в течении 10 минут
        - platform: state
          entity_id: climate.lytko_kitchen
          to: 'unavailable'
          for:
            minutes: 10
      action:
        # Перезагрузить термостат
        - service: rest_command.restart_lytko
        # Дождаться загрузки термостата
        - delay: 5
        # - wait_for_trigger:
        #     - platform: state
        #       entity_id: climate.lytko_kitchen
        #       from: 'unavailable'
        #       # for: 10
        - wait_template: "{{ not is_state('climate.lytko_kitchen', 'unavailable') }}"
          timeout: "00:05:00"
        - choose:
            # timeout reached
            - conditions: "{{ not wait.completed }}"
              sequence:
                - service: notify.sergey
                  data:
                    title: "*Не удалось* перезагрузить термостат тёплого пола на кухне!"
          default:
            # Термостат перезагружен
            - delay: 10
            - service: notify.sergey
              data:
                title: "Термостат тёплого пола на кухне *перезагружен*!"
                message: "Целевая: _{{ state_attr('climate.lytko_kitchen', 'temperature') | float }}_°C"

    - alias: Kitchen floor adjust target
      id: Kitchen floor adjust target
      trigger:
        # Запущен HA
        - id: HA start
          platform: homeassistant
          event: start
        # Перезагружены автоматизации
        - id: Automations reloaded
          platform: event
          event_type: automation_reloaded
        # Изменено состоятие сенсора КТО-ДОМА
        - id: Home Presence changed
          platform: state
          entity_id: input_select.home_presence
        # Heat time
        - id: Heat time OFF
          platform: state
          entity_id: binary_sensor.kitchen_floor_heat
          from: 'on'
          to: 'off'
        - id: Heat time ON
          platform: state
          entity_id: binary_sensor.kitchen_floor_heat
          from: 'off'
          to: 'on'
        # Night time
        - id: Night time OFF
          platform: state
          entity_id: binary_sensor.kitchen_floor_night
          from: 'on'
          to: 'off'
        - id: Night time ON
          platform: state
          entity_id: binary_sensor.kitchen_floor_night
          from: 'off'
          to: 'on'
        # Изменены целевые значения
        - id: Target for heat changed
          platform: state
          entity_id: input_number.kitchen_floor_temp_heat
          for: '00:00:05'
        - id: Target for night changed
          platform: state
          entity_id: input_number.kitchen_floor_temp_night
          for: '00:00:05'
        - id: Target for away changed
          platform: state
          entity_id: input_number.kitchen_floor_temp_away
          for: '00:00:05'
        - id: Target for regular changed
          platform: state
          entity_id: input_number.kitchen_floor_temp_regular
          for: '00:00:05'
        # Термостат стал доступен
        - id: Lytko become available
          platform: state
          entity_id: climate.lytko_kitchen
          from: 'unavailable'
      condition:
        # Термостат доступен
        - "{{ not is_state('climate.lytko_kitchen', 'unavailable') }}"
      action:
      - variables: 
          # Текущая установленная целевая температура
          current: "{{ state_attr('climate.lytko_kitchen', 'temperature') | float }}"
          # Необходимая целевая температура
          target: >-
            {% if is_state('input_select.home_presence', 'Away') %}
              {{ states('input_number.kitchen_floor_temp_away') }}
            {% elif is_state('input_select.home_presence', 'Noone') %}
              {{ states('input_number.kitchen_floor_temp_regular') }}
            {% elif is_state('binary_sensor.kitchen_floor_night', 'on') %}
              {{ states('input_number.kitchen_floor_temp_night') }}
            {% elif is_state('binary_sensor.kitchen_floor_heat', 'on') %}
              {{ states('input_number.kitchen_floor_temp_heat') }}
            {% else %}
              {{ states('input_number.kitchen_floor_temp_regular') }}
            {% endif %}
      - choose:
        - conditions:
            # Текущая и требуемая целевые температуры отличаются
            - "{{ current != target }}"
          sequence:
            # Установить новую целевую температуру
            - service: climate.set_temperature
              target:
                entity_id: climate.lytko_kitchen
              data_template:
                temperature: "{{ target }}"
            # Отправить сообщение в log
            # - service: notify.log
            #   data:
            #     title: "*Изменена температура тёплого пола на кухе*"
            #     message: |-
            #       Тригер: {{ trigger.id | replace("_","\_") }}
            #       Текущая: _{{ states('sensor.kitchen_floor_temp') | float }}_°C
            #       Целевая: _{{ current }}_°C -> _{{ target }}_°C
