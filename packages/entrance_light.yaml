entrance_light:

  light:

    - platform: switch
      name: entrance_mirror
      entity_id: switch.mirror_relay

  group:
  
    entrance_lights:
      name: Entrance Lights
      entities:
        - light.entrance_wall_switch_right
        - light.entrance_wall_switch_left
        - light.xiaomi_gateway_light
        - light.entrance_door
        - light.entrance_mirror
    
  input_datetime:
  
    entrance_top_light_finished_at:
      name: Entrance Top Light finished at
      has_date: true
      has_time: true

  binary_sensor:
  
    - platform: template
      sensors:
        entrance_light_timer_required:
          value_template: >-
            {{ 
              is_state('group.entrance_lights', 'on')
            and
              is_state('binary_sensor.entrance_motion', 'off')
            }}
          icon_template: >-
            {% if is_state("binary_sensor.entrance_light_timer_required", "on") %}
              mdi:timer
            {% else %}
              mdi:timer-off
            {% endif %}
    
  timer:
  
    entrance_light:
      duration: '00:01:00'

  automation:
  
    - alias: Entrance light timer reload
      id: Entrance light timer reload
      trigger:
        # Таймер должен быть включен
        - platform: state
          entity_id: binary_sensor.entrance_light_timer_required
          to: 'on'
      action:
        # Включить таймер
        - service: timer.start
          entity_id: timer.entrance_light
          data_template: 
            duration: >
              {%- if is_state('light.entrance_mirror', 'on') -%}
                00:10:00
              {%- elif 
                  is_state('light.entrance_wall_switch_right', 'on')
                or 
                  is_state('light.entrance_wall_switch_left', 'on') 
              -%}
                00:03:00
              {%- else -%}
                00:01:00
              {%- endif -%}
  
    - alias: Entrance light timer cancel
      id: Entrance light timer cancel
      trigger:
        # Таймер должен быть выключен
        - platform: state
          entity_id: binary_sensor.entrance_light_timer_required
          to: 'off'
      action:
        # Выключить таймер
        - service: timer.cancel
          entity_id: timer.entrance_light
  
    - alias: Entrance lights OFF (via timer)
      id: Entrance lights OFF (via timer)
      trigger:
        # Таймер
        - platform: event
          event_type: timer.finished
          event_data:
            entity_id: timer.entrance_light
      condition:
        # Любой свет включен
        - condition: state
          entity_id: group.entrance_lights
          state: 'on'
      action:
        # Выключить весь свет
        - service: homeassistant.turn_off
          entity_id:
            - group.entrance_lights

    - alias: Entrance puck ON (via sensor)
      id: Entrance puck ON (via sensor)
      trigger:
        # Появилось движение в прихожей
        - platform: state
          entity_id: binary_sensor.entrance_motion
          from: 'off'
          to: 'on'
        # Появилось движение в корридоре
        - platform: state
          entity_id: binary_sensor.xiaomi_mijia_70f0_motion
          from: 'off'
          to: 'on'
      condition:
        # Освещённость ниже порога
        - condition: numeric_state
          entity_id: sensor.xiaomi_gateway_illuminance
          below: 300
        # Весь выключен
        - condition: state
          entity_id: group.entrance_lights
          state: 'off'
      action:
        # Включить шайбу
        - service: light.turn_on
          entity_id: light.xiaomi_gateway_light
          data:
            brightness: 64

    - alias: Entrance puck ON (via other rooms)
      id: Entrance puck ON (via other rooms)
      trigger:
        # Выключился свет на кухне
        - platform: state
          entity_id: light.kitchen_lights
          from: 'on'
          to: 'off'
        # Выключился свет в туалете
        - platform: state
          entity_id: light.toilet_lights
          from: 'on'
          to: 'off'
        # Выключился свет в ванной
        - platform: state
          entity_id: light.bath_lights
          from: 'on'
          to: 'off'
        # Появилось движение в зале
        - platform: state
          entity_id: binary_sensor.qingping_motion_detector
          from: 'off'
          to: 'on'
      condition:
        # Солнце за горизонтом
        - condition: state
          entity_id: sun.sun
          state: 'below_horizon'
        # Весь свет в прихожей выключен
        - condition: state
          entity_id: group.entrance_lights
          state: 'off'
        # Весь свет на кухне выключен
        - condition: state
          entity_id: light.kitchen_lights
          state: 'off'
        # Весь свет в туалете выключен
        - condition: state
          entity_id: light.toilet_lights
          state: 'off'
        # Весь свет в ванной выключен
        - condition: state
          entity_id: light.bath_lights
          state: 'off'
        # Весь свет в зале выключен
        - condition: state
          entity_id: group.hall_ceiling_lights
          state: 'off'
      action:
        # Включить шайбу
        - service: light.turn_on
          entity_id: light.xiaomi_gateway_light
          data:
            brightness: 32
    
    - alias: Entrance top light finished recording
      id: Entrance top light finished recording
      trigger:
        # Верхний свет выключился
        - platform: state
          entity_id: light.entrance_wall_switch_left
          from: 'on'
          to: 'off'
        - platform: state
          entity_id: light.entrance_wall_switch_right
          from: 'on'
          to: 'off'
        # Зеркало выключено
        - platform: state
          entity_id: light.entrance_mirror
          from: 'on'
          to: 'off'
      condition:
        # Весь верхний свет выключен
        - condition: state
          entity_id: light.entrance_wall_switch_left
          state: 'off'
        - condition: state
          entity_id: light.entrance_wall_switch_right
          state: 'off'
        # Зеркало выключено
        - condition: state
          entity_id: light.entrance_mirror
          state: 'off'
      action:
        # Записать текущую дату и время
        - service: input_datetime.set_datetime
          data:
            entity_id: input_datetime.entrance_top_light_finished_at
            timestamp: "{{ now().timestamp() }}"

    - alias: Entrance light ON (via door)
      id: Entrance light ON (via door)
      trigger:
        # Открылась дверь
        - platform: state
          entity_id: binary_sensor.entance_door_button
          from: 'off'
          to: 'on'
      condition:
        # Весь верхний свет выключен
        - condition: state
          entity_id: light.entrance_wall_switch_left
          state: 'off'
        - condition: state
          entity_id: light.entrance_wall_switch_right
          state: 'off'
        # Зеркало выключено
        - condition: state
          entity_id: light.entrance_mirror
          state: 'off'
        # Cвет был выключен давно
        - "{{ ((as_timestamp(now()) - as_timestamp(states('input_datetime.entrance_top_light_finished_at'))) > 60) }}"
      action:
        # Включить свет
        - service: light.turn_on
          data_template:
            entity_id: >
              {% if is_state('binary_sensor.tod_day', 'on') %}
                light.entrance_wall_switch_right
              {% elif is_state('binary_sensor.tod_night', 'on') %}
                light.entrance_wall_switch_left
              {% endif %}