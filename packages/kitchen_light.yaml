kitchen_light:

    input_select:

      kitchen_light_mode:
        name: Kitchen Light Mode
        options:
          - 'None'
          - 'Ceiling'
          - 'Work'
          - 'Ceiling+Work'
          - 'All'
        icon: mdi:theme-light-dark
    
    input_datetime:
    
      kitchen_light_started_at:
        name: Kitchen light started at
        has_date: true
        has_time: true
    
    binary_sensor:
    
      - platform: template
        sensors:
          kitchen_motion:
            unique_id: kitchen_motion
            friendly_name: "Kitchen Motion"
            device_class: motion
            value_template: >-
              {{ 
                is_state('binary_sensor.rf_motion_0', 'on')
              or
                is_state('binary_sensor.kitchen_motion_2', 'on')
              }}
            availability_template: >-
              {{ 
                not is_state('binary_sensor.rf_motion_0', 'unavailable')
              or
                not is_state('binary_sensor.kitchen_motion_2', 'unavailable')
              }}
          kitchen_light_timer_required:
            value_template: >-
              {{ 
                is_state('group.kitchen_lights', 'on')
              and
                is_state('binary_sensor.kitchen_motion', 'off')
              and
                is_state('binary_sensor.kitchen_filter_drink_flows', 'off')
              and
                not is_state('input_select.kitchen_light_mode', 'None')
              }}
            icon_template: >-
              {% if is_state("binary_sensor.kitchen_light_timer_required", "on") %}
                mdi:timer
              {% else %}
                mdi:timer-off
              {% endif %}
          kitchen_light_motion_trigger:
            value_template: >-
              {{
                not is_state('input_select.kitchen_light_mode', 'None')
              and
                (
                  is_state('binary_sensor.kitchen_filter_drink_flows', 'on')
                or
                  (
                    is_state('binary_sensor.kitchen_motion', 'on')
                  and
                    is_state('sun.sun', 'below_horizon')
                  )
                )
              }}
            icon_template: >-
              {% if is_state("binary_sensor.kitchen_light_motion_trigger", "on") %}
                mdi:motion-sensor
              {% else %}
                mdi:motion-sensor-off
              {% endif %}

    group:
    
      kitchen_lights:
        name: Kitchen Lights
        entities:
          - light.kitchen_ceiling
          - light.kitchen_2_relay_l2

    light:
      - platform: group
        name: Kitchen Lights
        entities:
          - light.kitchen_ceiling
          - light.kitchen_2_relay_l2

    script:
      kitchen_lights_turn_on:
        mode: restart
        sequence:
          - service: light.turn_on
            data_template:
              entity_id: >
                {% if is_state('input_select.kitchen_light_mode', 'Ceiling') %}
                  light.kitchen_ceiling
                {% elif is_state('input_select.kitchen_light_mode', 'Work') %}
                  light.kitchen_2_relay_l2
                {% elif is_state('input_select.kitchen_light_mode', 'Ceiling+Work') %}
                  {% if is_state('binary_sensor.tod_day', 'on') %}
                    light.kitchen_ceiling
                  {% elif is_state('binary_sensor.tod_night', 'on') %}
                    light.kitchen_2_relay_l2
                  {% endif %}
                {% elif is_state('input_select.kitchen_light_mode', 'All') %}
                  light.kitchen_lights
                {% endif %}

    timer:
    
      kitchen_light:
        duration: '00:05:00'
    
    automation:

      - alias: Kitchen light timer reload
        trigger:
          # Таймер должен быть включен
          - platform: state
            entity_id: binary_sensor.kitchen_light_timer_required
            to: 'on'
        action:
          # Включить таймер
          - service: timer.start
            entity_id: timer.kitchen_light
            data_template: 
              duration: >
                {% set minutes = ((as_timestamp(now()) - as_timestamp(states('input_datetime.kitchen_light_started_at'))) / 60) %}
                {% if minutes > 144000 %}
                  00:00:30
                {% elif minutes < 1 %}
                  00:00:30
                {% elif minutes < 2 %}
                  00:01:00
                {% elif minutes < 5 %}
                  00:02:00
                {% elif minutes < 10 %}
                  00:05:00
                {% elif minutes < 1400 %}
                  00:10:00
                {%- else -%}
                  00:30:00
                {% endif %}
    
      - alias: Kitchen light timer cancel
        trigger:
          # Таймер должен быть выключен
          - platform: state
            entity_id: binary_sensor.kitchen_light_timer_required
            to: 'off'
        action:
          # Выключить таймер
          - service: timer.cancel
            entity_id: timer.kitchen_light
    
      - alias: Kitchen light ON (via sensors)
        trigger:
          # Датчики движения & режим Auto
          - platform: state
            entity_id: binary_sensor.kitchen_light_motion_trigger
            to: 'on'
        condition:
          # Весь свет выключен
          - condition: state
            entity_id: group.kitchen_lights
            state: 'off'
        action:
          # Включить свет
          - service: script.kitchen_lights_turn_on
    
      - alias: Kitchen light ON (manualy)
        trigger:
          # Выключатель на входе
          - platform: state
            entity_id: sensor.kitchen_wireless_switch_action
            to: 'single'
        condition:
          # Люстра выключена
          - condition: state
            entity_id: light.kitchen_ceiling
            state: 'off'
        action:
          # Включить люстру или луну
          - service: light.turn_on
            data_template:
              entity_id: >
                  light.kitchen_ceiling
    
      - alias: Kitchen light OFF (via timer)
        trigger:
          # Таймер
          - platform: event
            event_type: timer.finished
            event_data:
              entity_id: timer.kitchen_light
        condition:
          # Любой свет включен
          - condition: state
            entity_id: group.kitchen_lights
            state: 'on'
        action:
          # Выключить весь свет
          - service: homeassistant.turn_off
            entity_id:
              - group.kitchen_lights
    
      - alias: Kitchen light OFF (manualy)
        mode: restart
        trigger:
          # Выключатель на входе
          - platform: state
            entity_id: sensor.kitchen_wireless_switch_action
            to: 'single'
        condition:
          # Люстра включена
          - condition: state
            entity_id: light.kitchen_ceiling
            state: 'on'
        action:
          # Выключить люстру и луну
          - service: light.turn_off
            entity_id:
              - light.kitchen_ceiling
          # Деактивировать автоматическое включение света
          - service: automation.turn_off
            data:
              entity_id: automation.kitchen_light_on_via_sensors
          # Подождать 10 секунд
          - delay: '00:00:10'
          # Активировать автоматическое включение света
          - service: automation.turn_on
            data:
              entity_id: automation.kitchen_light_on_via_sensors
    
      - alias: Kitchen light started recording
        trigger:
          # Любой свет включился
          - platform: state
            entity_id: group.kitchen_lights
            from: 'off'
            to: 'on'
        condition:
          # Дата и время сброшены
          - condition: template
            value_template: '{{ as_timestamp(states("input_datetime.kitchen_light_started_at")) | timestamp_custom("%Y",true) == "1970" }}'
        action:
          # Записать текущую дату и время
          - service: input_datetime.set_datetime
            data:
              entity_id: input_datetime.kitchen_light_started_at
              timestamp: "{{ now().timestamp() }}"

      - alias: Kitchen light started hardcoded (when lights OFF)
        trigger:
          # Беспроводная кнопка (двойной клик)
          - platform: state
            entity_id: sensor.xiaomi_wireless_button_1_action
            to: 'double'
        condition:
          # Весь свет выключен
          - condition: state
            entity_id: group.kitchen_lights
            state: 'off'
        action:
          # Деактивировать запись текущего времени
          - service: automation.turn_off
            data:
              entity_id: automation.kitchen_light_started_recording
          # Включить свет 
          - service: script.kitchen_lights_turn_on
          # Записать вчерашнюю дату и время
          - service: input_datetime.set_datetime
            data:
              entity_id: input_datetime.kitchen_light_started_at
              timestamp: "{{ (now() - timedelta( days = 1 )).timestamp() }}"
          # Активировать запись текущего времени
          - service: automation.turn_on
            data:
              entity_id: automation.kitchen_light_started_recording

      - alias: Kitchen light started hardcoded (when lights ON)
        trigger:
          # Беспроводная кнопка (двойной клик)
          - platform: state
            entity_id: sensor.xiaomi_wireless_button_1_action
            to: 'double'
        condition:
          # Любой свет включен
          - condition: state
            entity_id: group.kitchen_lights
            state: 'on'
        action:
          # Записать вчерашнюю дату и время
          - service: input_datetime.set_datetime
            data:
              entity_id: input_datetime.kitchen_light_started_at
              timestamp: "{{ (now() - timedelta( days = 1 )).timestamp() }}"
          # Перезапустить таймер
          - service: timer.start
            entity_id: timer.kitchen_light
            data:
              duration: 00:30:00

      - alias: Kitchen light stopped recording
        trigger:
          # Весь свет выключился на 20 секунд
          - platform: state
            entity_id: group.kitchen_lights
            to: 'off'
            for: 
              seconds: 20
        action:
          # Сбросить дату и время
          - service: input_datetime.set_datetime
            data:
              entity_id: input_datetime.kitchen_light_started_at
              timestamp: 1

      - alias: Kitchen switch double click
        trigger:
          # Выключатель на входе (двойной клик)
          - platform: state
            entity_id: sensor.kitchen_wireless_switch_action
            to: 'double'
        condition:
          # Любой свет включен
          - condition: state
            entity_id: group.kitchen_lights
            state: 'on'
        action:
          # Выключить весь свет
          - service: homeassistant.turn_off
            entity_id:
              - group.kitchen_lights
          # Деактивировать автоматическое включение света
          - service: automation.turn_off
            data:
              entity_id: automation.kitchen_light_on_via_sensors
          # Подождать 10 секунд
          - delay: '00:00:10'
          # Активировать автоматическое включение света
          - service: automation.turn_on
            data:
              entity_id: automation.kitchen_light_on_via_sensors

      - alias: Kitchen Work ON (via button)
        trigger:
          # Беспроводная кнопка (одинарный клик)
          - platform: state
            entity_id: sensor.xiaomi_wireless_button_1_action
            to: 'single'
        action:
          # Включить/выключить рабочую подсветку
          - service: light.toggle
            data_template:
              entity_id: light.kitchen_2_relay_l2
